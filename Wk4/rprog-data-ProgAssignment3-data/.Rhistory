find_rtools()
install.packages("devtools")
install.packages("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
install.packages("devtools")
find_rtools()
install.packages(c("slidify","ggplot2"))
clear
cls
q()
install_github('ramnathv/slidify')
library(devtools)
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
install.packages("whiskr")
q()
getwd()
read.csv("Mydata.csv")
dit()
dir()
cd Desktop
ls()
rm(list=ls())
ls()
x<-c("a", "b", "c", "d")
for (i in 1:4) {}
for (i in 1:4) { print(x[i])}
for (i in 1:4) { x[i]}
for (letter in x) { print(x[i])}
for (letter in x) { print(x[letter])}
for (letter in x) { print(letter)}
rbinom(1, 1, 0.5)
rbinom(1, 1, 0.5)
rbinom(1, 1, 0.5)
rbinom(1, 1, 0.5)
rbinom(1, 1, 0.5)
rbinom(1, 1, 0.5)
rbinom(1, 1, 0.5)
rbinom(1, 1, 0.5)
rbinom(1, 1, 0.5)
y<-10
f <- function(x) { y<-2
y^2 + g(x)
}
g <- function(x) { x*y
}
ls()
y
f
g
f(3)
swirl()
library(swirl)
rm(list=ls())
library(swirl)
swirl()
T == T
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which (ints > 7)
any(ints < 0)
all (ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean(4,5,10)
my_mean(c(4,5,10))
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Good", "morning")
submit()
submit()
mad_libs(place = "Bangalore", adjective = "bored", noun = "toilet")
submit()
"I" %p% "love" %p% "R!"
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <-as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
View(f)
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
cube <- function(x, n) {
x^3
}
cube(3)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
?quantile
quantile(x, probs = seq(0, 1, 0.25)
quantile(x, probs = seq(0, 1, 0.25))
?gl
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
f<-gl(3,10)
f
tapply(x, f, mean)
tapply(x, f, range)
x
split(x,f)
?interaction
swirl()
library(swirl)
swirl()
rm(list=ls())
swirl()
swirl()
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
View(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_list <- sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
rm(list=ls())
library(datasets)
data(iris)
?isis
?iris
class(iris)
View(iris)
tapply(iris$Sepal.Length, iris$Species, summary)
tapply(iris$Sepal.Length, iris$Species, round(summary)
tapply(iris$Sepal.Length, iris$Species, round(summary))
tapply(iris$Sepal.Length, iris$Species, summary)
apply(iris, 2, mean)
apply(iris, 1, mean)
colMeans(iris)
colMeans(irisrowMeans(iris[, 1:4]))
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
rm(list=ls())
library(datasets)
data(mtcars)
View(mtcars)
split(mtcars, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
lapply(mtcars, mean)
mean(mtcars$mpg, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$hp, mtcars$cyl)
sapply(split(mtcars$hp, mtcars$cyl), mean)
x <- sapply(split(mtcars$hp, mtcars$cyl), mean)
class(x)
x
x$4
x["4"]
x[1]
x[3]
x[4]
abs(82.63636)
sapply(split(mtcars$hp, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)[,c(1,3)]
x[,c(1,3)]
x[,1:3]
x[[,1:3]]
sapply(split(mtcars$hp, mtcars$cyl), mean)[c(1,3)]
x[3] - x[1]
debug(ls)
ls
ls()
q
rm(list=ls())
debug(ls)
ls()
rm(list=ls())
function (name, pos = -1L, envir = as.environment(pos), all.names = FALSE,
pattern, sorted = TRUE)
{
if (!missing(name)) {
undebug(ls)
ls()
rm(list=ls())
setwd("~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data")
df <- read.csv("outcome-of-care-measures.csv",
colClasses = "character",
na.strings = c("", "Not Available"))
View(df)
names(df)
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("TX")
rankhospital("TX", "heart failure")
head(rankhospital("TX", "heart failure"))
texas <- rankhospital("TX", "heart failure")
texas[1,]
texas[1,1]
texas[nrow(texas), 1]
texas[NROW(texas), 1]
texas[5000,1]
texas[50,1]
texas[5,1]
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankhospital.R')
d <- rankhospital("MD", "heart attack", "worst")
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankhospital.R')
d <- rankhospital("MD", "heart attack", "worst")
View(d)
nrow(d)
d[nrow(d),1]
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankhospital.R')
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("MD", "heart attack", "worst")
rankhospital("TX", "heart failure", 4)
rankhospital("MN", "heart attack", 5000)
rankhospital("MN", "heart attack", "bla")
rankhospital("TX", "heart failure1", 4)
rankhospital("TB", "heart failure", 4)
rankhospital("MN", "heart attack", 50)
rankhospital("MN", "heart attack", 5)
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
df <- rankall
df <- rankall("heart attack")
View(df)
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
d <- rankall("heart attack")
View(d)
rm(d)
df <- df[order(df[3], df[1]),]
df <- df[order(df[1], df[3], df[2]),]
df[df$State == "AK"]
df[df$State == "AK",]
head(df[df$State == "AK",],1)
d  <- data.frame(hospital=character(), state=character())
head(df[df$State == "AK",],1)
head(df[df$State == "AK",1:2],1)
d <- rbind(d,head(df[df$State == "AK",1:2],1))
d
d  <- data.frame(hospital=character(), state=character())
d
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
data <- rankall("heart failure")
df <- data.frame(character(), character())
df
View(data)
data <- data[order(data[2], data[3], data[1]),]
data[data$State == "AR"]
data[data$State == "AR",]
head(data[data$State == "AR",])
head(data[data$State == "AR", 1:2])
data$State
levels(data$State)
levels(as.factor(data$State))
for (state in levels(as.factor(data$State))) {}
class(state)
state
rm(state)
dfs <- data[data$State=="WY",]
View(dfs)
dfs[,5000]
dfs[,17]
dfs[,11]
dfs[11]
dfs[11,]
dfs[11,1:2]
dfs[5000,1:2]
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
df_state <- rankall("heart attack")
View(df_state)
df_state
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
df_state <- rankall("heart attack")
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
df_state <- rankall("heart attack")
df_state[1,1]
df_state[nrow(df_state),1]
df_state["blah",1]
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart attack")
rankall("heart attack", num="bla")
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart attack")
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart attack")
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart attack")
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart attack")
head(rankall("heart attack"))
d<-rankall("heart attack")
View(d)
rm(d)
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart attack")
df <- rankall("heart attack")
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
df <- rankall("heart attack")
View(df)
df <- rankall("heart attack", "worst")
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
df <- rankall("heart attack", "worst")
df <- rankall("heart attack", 10)
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/best.R')
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankhospital.R')
source('~/Desktop/Coursera/Data Science Specialization - Johns Hopkins Univ/Course 02 - R Programming/Assignments/Wk4/rprog-data-ProgAssignment3-data/rankall.R')
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
